//how many players are needed to start the game, also the max amount of players that can join the game
let playersToStart = 3;
//the rate of fire for the asteroids in seconds
//if you want to change this mid-game, use changeRate(newRate) instead of just changing it because the mod seems to break if you change the code while it's running idk why
let fireRate = 1;
//in minutes
let gameLength = 5;

var ships = [];

var Fly_101 = '{"name":"Fly","level":1,"model":1,"size":1.05,"specs":{"shield":{"capacity":[99999,99999],"reload":[99999,99999]},"generator":{"capacity":[1,1],"reload":[1,1]},"ship":{"mass":5,"speed":[125,145],"rotation":[110,130],"acceleration":[100,120]}},"bodies":{"main":{"section_segments":12,"offset":{"x":0,"y":0,"z":10},"position":{"x":[0,0,0,0,0,0,0,0,0,0],"y":[-65,-60,-50,-20,10,30,55,75,60],"z":[0,0,0,0,0,0,0,0,0]},"width":[0,8,10,30,25,30,18,15,0],"height":[0,6,8,12,20,20,18,15,0],"propeller":true,"texture":[4,63,10,1,1,1,12,17]},"cockpit":{"section_segments":12,"offset":{"x":0,"y":0,"z":20},"position":{"x":[0,0,0,0,0,0,0],"y":[-15,0,20,30,60],"z":[0,0,0,0,0]},"width":[0,13,17,10,5],"height":[0,18,25,18,5],"propeller":false,"texture":[7,9,9,4,4]},"cannon":{"section_segments":6,"offset":{"x":0,"y":-15,"z":-10},"position":{"x":[0,0,0,0,0,0],"y":[-40,-50,-20,0,20,30],"z":[0,0,0,0,0,20]},"width":[0,5,8,11,7,0],"height":[0,5,8,11,10,0],"angle":0,"laser":{"damage":[5,6],"rate":4,"type":1,"speed":[160,180],"number":1,"error":2.5},"propeller":false,"texture":[3,3,10,3]}},"wings":{"main":{"length":[60,20],"width":[100,50,40],"angle":[-10,10],"position":[0,20,10],"doubleside":true,"offset":{"x":0,"y":10,"z":5},"bump":{"position":30,"size":20},"texture":[11,63]}},"typespec":{"name":"Fly","level":1,"model":1,"code":101,"specs":{"shield":{"capacity":[99999,99999],"reload":[99999,99999]},"generator":{"capacity":[1,1],"reload":[1,1]},"ship":{"mass":5,"speed":[125,145],"rotation":[110,130],"acceleration":[100,120]}},"shape":[1.368,1.368,1.093,0.965,0.883,0.827,0.791,0.767,0.758,0.777,0.847,0.951,1.092,1.667,1.707,1.776,1.856,1.827,1.744,1.687,1.525,1.415,1.335,1.606,1.603,1.578,1.603,1.606,1.335,1.415,1.525,1.687,1.744,1.827,1.856,1.776,1.707,1.667,1.654,0.951,0.847,0.777,0.758,0.767,0.791,0.827,0.883,0.965,1.093,1.368],"lasers":[{"x":0,"y":-1.365,"z":-0.21,"angle":0,"damage":[5,6],"rate":4,"type":1,"speed":[160,180],"number":1,"spread":0,"error":2.5,"recoil":0}],"radius":1.856}}';

ships.push(Fly_101);


var map = 
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999\n"+
"99999999999999999999999999        99999999999999999999999999";

let gameOn = false;

var stop = {
  id: "stop",
  obj: "https://starblast.data.neuronality.com/mods/objects/plane.obj",
  emissive: "https://raw.githubusercontent.com/seaweed32/Starblast-3d-images/main/stop-line.png",
  emissiveColor: 0xFFFFFF,
  transparent:true,
};
var arrow = {
  id: "arrow",
  obj: "https://starblast.data.neuronality.com/mods/objects/plane.obj",
  emissive: "https://raw.githubusercontent.com/seaweed32/Starblast-3d-images/main/arrow.png",
  emissiveColor: 0xFFFFFF,
  transparent:true,
};
game.setObject({
  id: "stop_top",
  type: stop,
  position: {x:0,y:14,z:-5},
  rotation: {x:135,y:0,z:0},
  scale: {x:444,y:50,z:1}
});
game.setObject({
  id: "stop_bottom",
  type: stop,
  position: {x:0,y:-27,z:-5},
  rotation: {x:135,y:0,z:0},
  scale: {x:444,y:50,z:1}
});


this.options = {
  root_mode: "",
  map_size: 60,
  starting_ship:101,
  ships:ships,
  reset_tree: false,
  asteroids_strength: 1000000,
  starting_ship_maxed: true,
  custom_map: map,
  max_players: playersToStart,
  map_name: "Asteroid Dodge"
  
};

let warning = {
  id:"warning",
  position:[55,78,24,24],
  visible: true,
  components: [
    { type: "text",position:[0,0,100,100],value:"Warning! Out of dodge area!",color:"rgba(255, 0, 0, 1)"},
    { type: "text",position:[0,15,100,100],value:"You will gain a point if you go farther!",color:"rgba(255, 0, 0, 1)"},
  ]
};

let playerWait = {
  id:"playerWait",
  position:[40,30,24,12],
  visible: true,
  components: [
    { type: "text",position:[0,0,100,100],value:"Waiting for more players...",color:"rgba(255, 255, 255, 1)"},
  ]
};

let gameStart = {
  id:"gameStart",
  position:[40,30,24,12],
  visible: true,
  components: [
    { type: "text",position:[0,0,100,100],value:"The game is starting",color:"rgba(255, 255, 255, 1)"},
  ]
};

let timeLeft = gameLength*60;
function timerGo(){
  for(let ship of game.ships){
    ship.setUIComponent({
      id:"timer",
      position:[40,15,24,10],
      visible: true,
      components: [
        { type: "text",position:[0,0,100,100],value:`Time left - ${Math.floor(timeLeft/60)}:${timeLeft-Math.floor(timeLeft/60)*60}`,color:"rgba(255, 255, 255, 1)"},
      ]
    });
  }
  timeLeft--;
  if(timeLeft<0){
    gameOver();
  }
}

let leaderG = "";
function leaderFunc(){
  let leader = game.ships[0];
  for(let ship of game.ships){
    if(ship.custom.hits<leader.custom.hits){
      leader = ship;
      leaderG = ship;
    }
  }
  for(let ship of game.ships){
    ship.setUIComponent({
      id:"leader",
      position:[31,1,24,12],
      visible: true,
      components: [
        { type: "text",position:[0,0,100,50],value:`Current leader - ${leader.name}`,color:"rgba(255, 255, 255, 1)"},
        { type: "text",position:[0,40,100,50],value:`with ${leader.custom.hits} points`,color:"rgba(255, 255, 255, 1)"},
      ]
    });
  }
}

function scoreFunc(ship){
  ship.custom.hits++;
  leaderFunc();
  ship.setUIComponent({
    id:"score",
    position:[55,1,24,12],
    visible: true,
    components: [
      { type: "text",position:[0,0,100,50],value:"Low score wins -",color:"rgba(255, 255, 255, 1)"},
      { type: "text",position:[0,40,100,50],value:`Your score: ${ship.custom.hits}`,color:"rgba(255, 255, 255, 1)"},
    ]
  });
}

function outCheck(){
  for(let ship of game.ships){
    if(ship.y > 20 || ship.y < -20){
      ship.setUIComponent(warning);
      if(ship.y > 35 || ship.y < -35){
        ship.set({y:0,vx:0,vy:0,x:Math.floor(Math.random() * 36) * (Math.round(Math.random()) ? 1 : -1)});
        scoreFunc(ship);
      }
    } else {
      ship.setUIComponent({
        id: "warning",
        visible: false
      });
    }
    if(ship.x > 40 || ship.x < -40){
      ship.set({x:Math.floor(Math.random() * 36) * (Math.round(Math.random()) ? 1 : -1)});
    }
  }
}

let objNum = 0;
function go(){
  let thisObj = `arrow_${objNum}`;
  let x = Math.floor(Math.random() * 36) * (Math.round(Math.random()) ? 1 : -1);
  game.setObject({
    id: thisObj,
    type: arrow,
    position: {x:x,y:0,z:-2},
    rotation: {x:135,y:0,z:0},
    scale: {x:10,y:10.6,z:1}
  });
  for(let i=0;i<5;i++){
    game.addAsteroid({size:30,y:100,x:x,vy:-2});
  }
  setTimeout( () => {
    game.removeObject(thisObj);
  }, 2000);
}

function gameStartFunc(){
  leaderFunc();
  for(let ship of game.ships){
    scoreFunc(ship);
    //hide the waiting for players UI
    ship.setUIComponent({
      id: "playerWait",
      visible: false
    });
    //show the "The games starting" UI
    ship.setUIComponent(gameStart);
    //un-idle the ships
    ship.set({idle:false});
  }
  
  //wait 2 seconds then remove the "The game is starting" UI
  setTimeout( () => {
    for(let ship of game.ships){
      ship.setUIComponent({
        id: "gameStart",
        visible: false
      });
    }
  }, 2000);
  //wait another 2 seconds then start the asteroids
  setTimeout( () => {
    gameOn = true;
  }, 4000);
}

function gameStopFunc(){
  timeLeft = gameLength*60;
  gameOn = false;
  for(let ship of game.ships){
    //when the game stops and everyone goes idle, this make sure that no one is outside of the dodge area
    if(ship.y > 20 || ship.y < -20){
      ship.set({y:0});
    }
    ship.custom.hits = -1;
    ship.set({type:101,idle:true,vx:0,vy:0});
    ship.setUIComponent(playerWait);
    ship.setUIComponent({
      id: "score",
      visible: false
    });
    ship.setUIComponent({
      id: "leader",
      visible: false
    });
    ship.setUIComponent({
      id: "timer",
      visible: false
    });
    ship.setUIComponent({
      id: "over",
      visible: false
    });
  }
}

function gameOver(){
  let score = leaderG.custom.hits;
  gameStopFunc();
  for(let ship of game.ships){
    ship.setUIComponent({
      id: "playerWait",
      visible: false
    });
    ship.setUIComponent({
      id:"over",
      position:[32,25,30,20],
      visible: true,
      components: [
        { type: "text",position:[0,0,100,75],value:"Time's up!",color:"rgba(255, 255, 255, 1)"},
      ]
    });
    setTimeout( () => {
      ship.setUIComponent({
        id:"over",
        position:[30,25,40,24],
        visible: true,
        components: [
          { type: "text",position:[0,0,100,50],value:"This round has been won by -",color:"rgba(255, 255, 255, 1)"},
          { type: "text",position:[0,40,100,50],value:`${leaderG.name} with ${score} points`,color:"rgba(255, 255, 255, 1)"},
        ]
      });
    }, 2500);
    setTimeout( () => {
      ship.setUIComponent({
        id:"over",
        position:[30,25,40,24],
        visible: true,
        components: [
          { type: "text",position:[0,0,100,100],value:"New round starting",color:"rgba(255, 255, 255, 1)"},
        ]
      });
    }, 7500);
    setTimeout( () => {
      ship.setUIComponent({
        id:"over",
        visible: false,
      });
      gameStartFunc();
    }, 10000);
  }
}

function newPlayerSetup(ship){
  if(gameOn){
    ship.set({x:Math.floor(Math.random() * 36) * (Math.round(Math.random()) ? 1 : -1),y:0});
    leaderFunc();
    scoreFunc(ship);
  } else {
    gameStopFunc();
  }
  if(game.ships.length>=playersToStart && !gameOn){
    gameStartFunc();
  }
}

this.tick = function(game) {
  if(game.step%60===0){
    //remove asteroids after they fly past a certain point
    for(let asteroid of game.asteroids){
      if(asteroid.y<-60){
        asteroid.set({size:1,kill:true});
      }
    }
    
    if(gameOn){
      outCheck();
      timerGo();
    } else {
      for(let ship of game.ships){
        ship.set({vx:0,vy:0});
      }
    }
    
    if(game.ships.length<playersToStart && gameOn){
      gameStopFunc();
    }
  }
  if(game.step%(fireRate*60)===0){
    if(gameOn){
      go();
    }
  }
};

this.event = function(event, game) {
  switch (event.name) {
    case "ship_spawned":
      event.ship.custom.hits = -1;
      newPlayerSetup(event.ship);
      break;
    case "ship_destroyed":
      if(game.ships.indexOf(event.ship)<=1){
        gameStopFunc();
      }
      break;
  }
};

changeRate = function(newRate){
  fireRate = newRate;
}

